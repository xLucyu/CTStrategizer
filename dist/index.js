"use strict";var N=Object.create;var r=Object.defineProperty;var S=Object.getOwnPropertyDescriptor;var O=Object.getOwnPropertyNames;var R=Object.getPrototypeOf,q=Object.prototype.hasOwnProperty;var h=(e,t)=>{for(var n in t)r(e,n,{get:t[n],enumerable:!0})},b=(e,t,n,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let a of O(t))!q.call(e,a)&&a!==n&&r(e,a,{get:()=>t[a],enumerable:!(o=S(t,a))||o.enumerable});return e};var m=(e,t,n)=>(n=e!=null?N(R(e)):{},b(t||!e||!e.__esModule?r(n,"default",{value:e,enumerable:!0}):n,e)),B=e=>b(r({},"__esModule",{value:!0}),e);var _={};h(_,{BotClient:()=>u});module.exports=B(_);var E=require("discord.js");var w=m(require("dotenv"));w.default.config();var{TOKEN:M,ID:j}=process.env,i={TOKEN:M,ID:j};var g={};h(g,{data:()=>G,execute:()=>K});var d=require("discord.js");var f=m(require("sqlite3")),x=require("sqlite");f.default.verbose();var c=class{constructor(){this.filename="../channelDatabase/channels.db";this.open()}async open(){this.db=await(0,x.open)({filename:this.filename,driver:f.default.Database}),await this.setup()}async setup(){await this.db.exec(`
      create table if not exists channels (
        guildId TEXT PRIMARY KEY,
        channelId TEXT
      )
    `)}async addChannel(t,n){await this.db.run("insert or replace into channels (guildId, channelId) values (?, ?)",t,n)}async getChannel(t){return await this.db.get("select * from channels where guildId = ?",t)}};var G=new d.SlashCommandBuilder().setName("set_channel").setDescription("set the channel for the bot to post. MUST BE A FORUM!!").addChannelOption(e=>e.setName("channel").setDescription("forum channel").setRequired(!0).addChannelTypes(d.ChannelType.GuildForum));async function K(e){console.log("hello");let t=e.options.getChannel("channel",!0).id,n=e.guildId;if(!n)return e.reply({content:"Unable to use this in dms"});await new c().addChannel(n,t),await e.reply({content:`bot channel set to <${t}>`})}var y={};h(y,{data:()=>P,execute:()=>U});var D=require("discord.js");var l=require("discord.js");var C=m(require("path")),v=m(require("fs/promises"));async function p({guildId:e}){try{console.log("Started refreshing application (/) commands.");let t=C.default.join(__dirname,"commands"),n=await v.default.readdir(t),o=[];for(let s of n){if(!s.endsWith(".ts")&&!s.endsWith(".js")||s==="index.ts"||s==="index.js")continue;let I=await import(C.default.join(t,s));I.data&&o.push(I.data.toJSON())}await new l.REST({version:"10"}).setToken(i.TOKEN).put(l.Routes.applicationGuildCommands(i.ID,e),{body:o}),console.log("Successfully reloaded application (/) commands.")}catch(t){console.error("Error syncing commands:",t)}}var P=new D.SlashCommandBuilder().setName("sync").setDescription("sync commands");async function U(e){await p({guildId:e.guildId})}var T={setChannel:g,admin:y};var u=class{constructor(){this.client=new E.Client({intents:["Guilds","GuildMessages"]}),this.registerCommands(),this.executeCommand()}registerCommands(){this.client.on("guildCreate",async t=>{await p({guildId:t.id})})}executeCommand(){this.client.on("interactionCreate",async t=>{if(!t.isChatInputCommand())return;let{commandName:n}=t,o=T[n];o&&await o.execute(t)})}startBot(){this.client.login(i.TOKEN),this.client.once("ready",async()=>{console.log("Bot is online")})}};require.main==module&&new u().startBot();0&&(module.exports={BotClient});
